#!/bin/sh
#
# deploy - a script to deploy ssh settings
#
# Dependencies: POSIX shell, dirname, basename, "local" keyword
#
# Files:
# $CMROOT
#   |
#   \- $CI
#       |
#       |- bin
#       |   |
#       |   |- script1
#       |   \- script2
#       |
#       |- config
#       |   |
#       |   |- server1
#       |   |- server2
#       |   \- default
#       |
#       \- deploy
#
# Possible improvements
#  + Add tab and newline detection to safety check in init_dirs()
#  + Add -h option to show help
#  + Add -f option to force overwriting existing files
#  + Add -c option to remove existing files
#  + Add -d option to make a dry run
#  + Generalize this script into a library and add a specific license


CMROOT=""
CI="ssh"
CIROOT=""


function init_dirs () {
  # See the following page for explanation of CMROOT magic
  # http://stackoverflow.com/questions/8468519/can-a-shell-script-tell-what-directory-its-in-no-bashisms#8506790
  # 2>&1 is there to catch errors spitted by cd in case $0 contains characters from IFS
  CMROOT=$(cd $(dirname -- "$0")/.. 2>&1; pwd)
  if [ "$CMROOT" != "${CMROOT% *}" ]; then
    # Make sure there are no IFS characters in absolute path; needed for copy_bin_files() to work properly
    echo "The path to the current script should not contain any spaces, tabs or newlines"
    exit 1
  fi
  CIROOT="$CMROOT/$CI"
}


function write_ssh_config () {
  TARGETFILE="$HOME/.ssh/config"

  # Check if file exists already
  if [ -f "$TARGETFILE" ]; then
    while true; do
      read -p "Do you wish to overwrite existing configuration in ~/.ssh/config? " yn
      case $yn in
        [Yy]* ) cat /dev/null > "$TARGETFILE"; break;;
        [Nn]* ) echo "Skipping $TARGETFILE"; return;;
        *     ) echo "Please answer yes or no.";;
      esac
    done
  else
    mkdir -p $(dirname "$TARGETFILE")
    touch "$TARGETFILE"
  fi

  # Write file contents
  echo "Writing $TARGETFILE"
  for i in "$CIROOT"/config/*; do
    if [ -f "$i" ] && [ "$i" != "$CIROOT/config/default" ]; then
      cat "$i" >> "$TARGETFILE"
    fi
  done
  cat "$CIROOT/config/default" >> "$TARGETFILE"

  TARGETFILE=
}


function copy_bin_files () {
  TARGETDIR="$HOME/bin"
  TARGETFILE=""
  mkdir -p "$TARGETDIR"
  # $CIROOT is assumed not to contain any whitespaces
  for i in "$CIROOT"/bin/*; do
    TARGETFILE="$TARGETDIR"/$(basename "$i")
    if [ -f "$TARGETFILE" ]; then
      while true; do
        read -p "Do you wish to overwrite existing file in $TARGETFILE? " yn
        case $yn in
          [Yy]* ) break 1;;
          [Nn]* ) echo "Skipping $TARGETFILE"; continue 2;;
          *     ) echo "Please answer yes or no.";;
        esac
      done
    fi
    echo "Writing $TARGETFILE"
    cp "$i" "$TARGETFILE"
  done

  TARGETDIR=
  TARGETFILE=
}


function main () {
  # Initialize program
  init_dirs $0

  # Write ~/.ssh/config file
  write_ssh_config

  # Copy files to ~/bin
  copy_bin_files
}

main "$@"

